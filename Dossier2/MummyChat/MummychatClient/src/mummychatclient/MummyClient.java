/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mummychatclient;

import static MumService.Crypto.h;
import MumService.Protocol;
import MumService.TCPAccess;
import MumService.ThreadUDP;
import MumService.UDPAccess;
import java.io.*;
import java.net.*;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Gauvain Klug
 */
public class MummyClient extends javax.swing.JFrame {

    /**
     * Creates new form MummyClient
     */
    public MummyClient() {
        initComponents();
        this.ChangeState(false);
        Properties param = new Properties();
        try {
            param.load(getClass().getResourceAsStream("config.properties"));
        } catch (IOException ex) {
            Logger.getLogger(MummyClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        Serverport =  Integer.parseInt(param.getProperty("AuthPort"));
        String ip = param.getProperty("AuthAddress");
         try {
            ServerAddress = InetAddress.getByName(ip) ;
        } catch (UnknownHostException ex) {
            Logger.getLogger(MummyClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        nb++;
    }
    InetAddress ServerAddress;
    int Serverport;
    Socket CLSocket;
    MulticastSocket UDPSocket;
    ThreadUDP UDPRCV;
    String Pseudo;
    static int nb = 0;
    int tagq;
    int tagqnb = 1;
    
    InetAddress groupAddress;
    int UDPPort;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ChatField = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        TagCB = new javax.swing.JComboBox<>();
        SendButton = new javax.swing.JButton();
        AskButton = new javax.swing.JButton();
        AnswerButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        MsgField = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        LoginMenu = new javax.swing.JMenu();
        LogoutMenu = new javax.swing.JMenu();
        ExitMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Mummy Chat");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        ChatField.setEditable(false);
        ChatField.setColumns(20);
        ChatField.setRows(5);
        jScrollPane1.setViewportView(ChatField);

        jLabel1.setText("Question Tag");

        TagCB.setMaximumRowCount(50);

        SendButton.setText("Send Message");
        SendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendButtonActionPerformed(evt);
            }
        });

        AskButton.setText("Ask");
        AskButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AskButtonActionPerformed(evt);
            }
        });

        AnswerButton.setText("Answer");
        AnswerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnswerButtonActionPerformed(evt);
            }
        });

        MsgField.setColumns(20);
        MsgField.setRows(5);
        MsgField.setText("Type here");
        jScrollPane2.setViewportView(MsgField);

        LoginMenu.setText("Login");
        LoginMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(LoginMenu);

        LogoutMenu.setText("Logout");
        LogoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(LogoutMenu);

        ExitMenu.setText("Exit");
        ExitMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(ExitMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TagCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AnswerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TagCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AnswerButton)
                    .addComponent(AskButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SendButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginMenuMouseClicked
         LoginFrame login = new LoginFrame();
        login.setVisible(true);
        
        if(login.getDialogResult() == state.OK)
        {
             CLSocket = new Socket();
            try {
                CLSocket.connect(new InetSocketAddress(ServerAddress, Serverport));
                TCPAccess.writeLikeC(CLSocket,"LOGIN_GROUP " + login.getLogin()+" "+login.getPwd()+" "+Integer.toString(h(login.getPwd())));
                Pseudo = login.getLogin();
                CLSocket.getOutputStream().flush();
                
                String rep = TCPAccess.readLikeC(CLSocket);
                System.out.println(rep);
                if("YES".equals(Protocol.ExtractProtocol(rep)))
                {
                    ChangeState(true);
                    tagq = Integer.parseInt(Protocol.ExtractParam(rep, 2));
                    initUDP(Protocol.ExtractParam(rep, 1));
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, rep);
                    try {
                        CLSocket.close();
                    } catch (Exception ex) {
                        System.out.println("mummychatclient.MummyClient.initUDP(): " + ex.getMessage());
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(MummyClient.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_LoginMenuMouseClicked

    private void LogoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMenuMouseClicked
        ChangeState(false);
        Pseudo = null;
        
        closeUDP();
    }//GEN-LAST:event_LogoutMenuMouseClicked

    private void ExitMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMenuMouseClicked
        if(this.ChatField.isEnabled())
            closeUDP();
        
        System.exit(0);
    }//GEN-LAST:event_ExitMenuMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.ExitMenuMouseClicked(null);
    }//GEN-LAST:event_formWindowClosing

    private void AskButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AskButtonActionPerformed
        UDPAccess.sendUDPLikeC(UDPSocket, Protocol.protocols.POST_QUESTION.toString() + " [Q"+ tagq +"-"+ tagqnb + "]"+ Pseudo +": "+ this.MsgField.getText(), groupAddress, UDPPort);
        MsgField.setText("");
        tagqnb++;
    }//GEN-LAST:event_AskButtonActionPerformed

    private void AnswerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnswerButtonActionPerformed
        UDPAccess.sendUDPLikeC(UDPSocket, Protocol.protocols.ANSWER_QUESTION.toString() + " [R"+ (String)this.TagCB.getSelectedItem() + "]"+ Pseudo +": " + this.MsgField.getText(), groupAddress, UDPPort);
        MsgField.setText("");
    }//GEN-LAST:event_AnswerButtonActionPerformed

    private void SendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendButtonActionPerformed
        UDPAccess.sendUDPLikeC(UDPSocket, Protocol.protocols.POST_EVENT.toString() + " " + Pseudo + ": " + this.MsgField.getText(), groupAddress, UDPPort);
        MsgField.setText("");
    }//GEN-LAST:event_SendButtonActionPerformed

    private void initUDP(String address )
    {
        TagCB.removeAllItems();
        this.setTitle("MummyChat - " + Pseudo);
        try {
            CLSocket.close();
        } catch (Exception ex) {
            System.out.println("mummychatclient.MummyClient.initUDP(): " + ex.getMessage());
        }
        
        Properties param = new Properties();
        try {
            param.load(this.getClass().getResourceAsStream("config.properties"));
            UDPPort = /*nb +*/ Integer.parseInt(param.getProperty("UDPPort"));
            UDPSocket = new MulticastSocket(UDPPort);
            groupAddress = InetAddress.getByName(address);
            UDPSocket.joinGroup(groupAddress);
            UDPRCV = new ThreadUDP(UDPSocket, ChatField, TagCB);
            UDPRCV.start();
        
        } catch (IOException ex) {
            Logger.getLogger(MummyClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void closeUDP()
    {
        this.setTitle("MummyChat");
        UDPRCV.setSt(true);
        TagCB.removeAllItems();
        ChatField.setText("");
        UDPSocket.close();
    }
    
    private void ChangeState(Boolean newstate)
    {
        this.AnswerButton.setEnabled(newstate);
        this.AskButton.setEnabled(newstate);
        this.ChatField.setEnabled(newstate);
        this.LogoutMenu.setEnabled(newstate);
        this.LoginMenu.setEnabled(!newstate);
        this.MsgField.setEnabled(newstate);
        this.SendButton.setEnabled(newstate);
        this.TagCB.setEnabled(newstate);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    //break
                }
                System.out.println(info.getName());
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MummyClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MummyClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AnswerButton;
    private javax.swing.JButton AskButton;
    private javax.swing.JTextArea ChatField;
    private javax.swing.JMenu ExitMenu;
    private javax.swing.JMenu LoginMenu;
    private javax.swing.JMenu LogoutMenu;
    private javax.swing.JTextArea MsgField;
    private javax.swing.JButton SendButton;
    private javax.swing.JComboBox<String> TagCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
